services:
  # React Frontend Service
  react-frontend:
    image: react-frontend-full:latest      # Use the image you built for React
    container_name: react-frontend-full   # Name of the container
    ports:
      - "3000:80"                    # Map host port 3000 to container port 80
    env_file:
      - ./frontend/.env              # Load environment variables for frontend
    depends_on:
      - csharp-backend               # Optional: start frontend after backend
    networks:
      - my_Network                   # Connect to custom network
  # .NET Backend Service
  csharp-backend:
    image: csharp-backend-full:latest    # Use the image you built for .NET backend
    container_name: csharp-backend-full  # Name of the container
    ports:
      - "8080:8080"                 # Map host port 8080 to container port 8080
    env_file:
      - ./api/.env              # Load environment variables for backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development   # Run backend in Development mode
    depends_on: #SQL Server may take a few seconds to initializeâ€”consider a wait-for-it script in your backend.
      - sql1                         # Ensure backend starts after SQL Server
    networks:
      - my_Network                   # Connect to same network as frontend & DB
  # SQL Server Database Service
  sql1:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql1
    environment:
      ACCEPT_EULA: "Y"                # Must accept SQL Server license
      SA_PASSWORD: "${SA_PASSWORD}"
    ports:
      - "1433:1433"                    # Expose SQL Server to host (optional)
    volumes:
    - sql1_volume:/var/opt/mssql   # Persist database data
    networks:
      - my_Network                   # Connect to same network as frontend & and backend
# Networks
networks:
  my_Network:
    external: true                   # Use an already created Docker network
